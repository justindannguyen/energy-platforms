server.port=0

eureka.client.serviceUrl.defaultZone=${EUREKA_SERVER_URI:http://localhost:8761/eureka/}
eureka.client.healthcheck.enabled=true

# Stream configuration
spring.cloud.stream.bindings.input.destination=${ENERGY_INPUT_TOPIC:energysolution_parsedreading}
spring.cloud.stream.bindings.input.group=${ENEGY_CONSUMER_GROUP:energy-hour-aggregation}
spring.cloud.stream.bindings.output.destination=${ENERGY_OUTPUT_TOPIC:energysolution_hour_aggregation}
spring.cloud.stream.bindings.output.content-type = application/json
spring.cloud.stream.kafka.streams.binder.brokers=${BROKERS:localhost:9092}
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde = org.apache.kafka.common.serialization.Serdes$StringSerde

# Sink configuration
spring.cloud.stream.bindings.hourAggregationInput.destination=${ENERGY_OUTPUT_TOPIC:energysolution_hour_aggregation}
spring.cloud.stream.bindings.hourAggregationInput.group=${ENEGY_HA_CONSUMER_GROUP:energy-hour-aggregation-sink}
spring.cloud.stream.kafka.binder.brokers=${BROKERS:localhost:9092}

spring.data.mongodb.uri=${MONGODB_SERVER_URI:mongodb://localhost:27017/energy}